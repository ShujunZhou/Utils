<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--配置SpringMVC-->
    <!--1:开启SpringMVC注解模式-->
    <!--简化配置：
        （1）自动注册DefaultAnnotationHandlerMapping, AnnotationMethodHandlerAdapter
        （2）提供一系列：数据绑定，数字和日期的format @NumberFormat, @DataTimeFormat,
        xml,json默认读写支持
    -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=utf-8</value>
                        <value>text/html;charset=utf-8</value>
                        <value>text/json;charset=utf-8</value>
                        <value>application/json;charset=utf-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!--扫描web相关的bean-->
    <context:component-scan base-package="cn.ubangdi.web"/>

    <!--2:静态资源默认servlet配置
        1：加入对静态资源的处理：js,gif,png
        2：允许使用"/"做整体映射
    -->
    <mvc:default-servlet-handler/>
    <mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:resources location="/js/" mapping="/js/**"/>
    <mvc:resources location="/image/" mapping="/image/**"/>

    <!--3：配置ViewResolver-->
    <bean  class = "org.springframework.web.servlet.view.ContentNegotiatingViewResolver" >
        <property  name = "viewResolvers">
            <list>
                <bean  class = "org.springframework.web.servlet.view.BeanNameViewResolver" />
                <bean  class = "org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property  name = "prefix"  value = "/WEB-INF/html/" />
                    <property  name = "suffix" value = ".html" />
                </bean>
            </list>
        </property>
        <property  name = "defaultViews">
            <list>
                <bean  class = "org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
            </list>
        </property>
    </bean>


    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>

    <!--配置拦截器，用于检测是否登陆,若未登陆，进行拦截-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <mvc:mapping path="/" />
            <mvc:mapping path="/sendUser/**" />
            <mvc:mapping path="/logisticsWorks/**" />
            <bean class="cn.ubangdi.interceptor.UserIsLoginInterceptor"/>
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    </mvc:interceptors>
</beans>